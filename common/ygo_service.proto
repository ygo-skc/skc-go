syntax = "proto3";

option go_package = "/ygo";
package ygo;

import "common.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

service CardService {
  rpc GetCardColors(google.protobuf.Empty) returns (CardColors);

  rpc GetCardByID(ygo.common.ResourceID) returns (Card);
  rpc GetCardsByID(ygo.common.ResourceIDs) returns (Cards);

  rpc GetCardsByName(ygo.common.ResourceNames) returns (Cards);

  rpc GetCardsReferencingNameInEffect(ygo.common.ResourceNames) returns (CardList);

  rpc GetArchetypalCardsUsingCardName(ygo.common.Archetype) returns (CardList);
  rpc GetExplicitArchetypalInclusions(ygo.common.Archetype) returns (CardList);
  rpc GetExplicitArchetypalExclusions(ygo.common.Archetype) returns (CardList);

  rpc GetRandomCard(ygo.common.BlackListed) returns (Card);
}

service ProductService {
	rpc GetCardsByProductID(ygo.common.ResourceID) returns (Product);

	rpc GetProductSummaryByID(ygo.common.ResourceID) returns (ProductSummary);
	rpc GetProductsSummaryByID(ygo.common.ResourceIDs) returns (Products);
}

service CardRestrictionService {
	rpc GetEffectiveTimelineForFormat(Format) returns (ygo.common.EffectiveTimeline);
}

service ScoreService {
	rpc GetScoresByFormatAndDate(RestrictedContentRequest) returns (ScoresForFormatAndDate);

	rpc GetCardScoreByID(ygo.common.ResourceID) returns (CardScore);
  	rpc GetCardScoresByIDs(ygo.common.ResourceIDs) returns (CardScores);
}

message CardColors {
  map<string, uint32> values = 1;
}

message Card {
  string ID = 1;
  string color = 2;
  string name = 3;
  string attribute = 4;
  string effect = 5;
  google.protobuf.StringValue monster_type = 6 [json_name = "monsterType"];
  google.protobuf.UInt32Value attack = 7;
  google.protobuf.UInt32Value defense = 8;
}

message Cards {
	map<string, Card> card_info = 1;
	repeated string unknown_resources = 2;
}

message CardList {
	repeated Card cards = 1;
}

message Product {
  string ID = 1;
  string locale = 2;
  string name = 3;
  string type = 4;
  string subType = 5;
  string releaseDate = 6;
  uint32 totalItems = 7;
  repeated ProductItem items = 8;
  map<string, uint32> rarityDistribution = 9;
}

message ProductItem {
  Card card = 1;
  string position = 2;
  repeated string rarities = 3;
}

message ProductSummary {
  string ID = 1;
  string locale = 2;
  string name = 3;
  string type = 4;
  string subType = 5;
  string releaseDate = 6;
  uint32 totalItems = 7;
}

message Products {
	map<string, ProductSummary> products = 1;
	repeated string unknown_resources = 2;
}

message Format {
	string value = 1;
}

message RestrictedContentRequest {
	string format = 1;
	string effective_date = 2;
	common.CardRestrictionSortOrder sort_order = 3;
}

// score specific data types

message ScoresForFormatAndDate {
	string format = 1;
	string effective_date = 2;
	google.protobuf.StringValue next_format_date = 3;
	google.protobuf.StringValue previous_format_date = 4;
	repeated CardScoreEntry entries = 5;
	uint32 total_entries = 6;
}

message CardScoreEntry {
	Card card = 1;
	uint32 score = 2;
}

message CardScore {
  map<string, uint32> current_score_by_format = 1;
  repeated string unique_formats = 2;
  repeated ScoreEntry score_history = 3;
  repeated string scheduled_changes = 4;;
}

message CardScores {
	map<string, CardScore> card_info = 1;
	repeated string unknown_resources = 2;
}

message ScoreEntry {
	string format = 1;
	string effective_date = 2;
	uint32 score = 3;
}