syntax = "proto3";

option go_package = "/ygo";
package ygo;

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

service CardService {
  rpc GetCardColors(google.protobuf.Empty) returns (CardColors);

  rpc GetCardByID(ResourceID) returns (Card);
  rpc GetCardsByID(ResourceIDs) returns (Cards);

  rpc GetCardsByName(ResourceNames) returns (Cards);

  rpc SearchForCardRefUsingEffect(SearchTerm) returns (CardList);

  rpc GetArchetypalCardsUsingCardName(Archetype) returns (CardList);
  rpc GetExplicitArchetypalInclusions(Archetype) returns (CardList);
  rpc GetExplicitArchetypalExclusions(Archetype) returns (CardList);

  rpc GetRandomCard(BlackListed) returns (Card);
}

service ProductService {
	rpc GetCardsByProductID(ResourceID) returns (Product);

	rpc GetProductSummaryByID(ResourceID) returns (ProductSummary);
	rpc GetProductsSummaryByID(ResourceIDs) returns (Products);
}

message CardColors {
  map<string, uint32> values = 1;
}

message ResourceID {
  string ID = 1;
}

message ResourceIDs {
  repeated string IDs = 1;
}

message ResourceNames {
  repeated string names = 1;
}

message SearchTerm {
  string ID = 1;
  string name = 2;
}

message Archetype {
	string archetype = 1;
}

message BlackListed {
  repeated string black_listed_refs = 1;
}

message Card {
  string ID = 1;
  string color = 2;
  string name = 3;
  string attribute = 4;
  string effect = 5;
  google.protobuf.StringValue monster_type = 6 [json_name = "monsterType"];
  google.protobuf.UInt32Value attack = 7;
  google.protobuf.UInt32Value defense = 8;
}

message Cards {
	map<string, Card> card_info = 1;
	repeated string unknown_resources = 2;
}

message CardList {
	repeated Card cards = 1;
}

message Product {
  string ID = 1;
  string locale = 2;
  string name = 3;
  string type = 4;
  string subType = 5;
  string releaseDate = 6;
  uint32 totalItems = 7;
  repeated ProductItem items = 8;
  map<string, uint32> rarityDistribution = 9;
}

message ProductItem {
  Card card = 1;
  string position = 2;
  repeated string rarities = 3;
}

message ProductSummary {
  string ID = 1;
  string locale = 2;
  string name = 3;
  string type = 4;
  string subType = 5;
  string releaseDate = 6;
  uint32 totalItems = 7;
}

message Products {
	map<string, ProductSummary> products = 1;
	repeated string unknown_resources = 2;
}