// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: common.proto

package ygo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceID) Reset() {
	*x = ResourceID{}
	mi := &file_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceID) ProtoMessage() {}

func (x *ResourceID) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceID.ProtoReflect.Descriptor instead.
func (*ResourceID) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceID) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ResourceIDs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IDs           []string               `protobuf:"bytes,1,rep,name=IDs,proto3" json:"IDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceIDs) Reset() {
	*x = ResourceIDs{}
	mi := &file_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceIDs) ProtoMessage() {}

func (x *ResourceIDs) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceIDs.ProtoReflect.Descriptor instead.
func (*ResourceIDs) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceIDs) GetIDs() []string {
	if x != nil {
		return x.IDs
	}
	return nil
}

type ResourceName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceName) Reset() {
	*x = ResourceName{}
	mi := &file_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceName) ProtoMessage() {}

func (x *ResourceName) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceName.ProtoReflect.Descriptor instead.
func (*ResourceName) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ResourceNames struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceNames) Reset() {
	*x = ResourceNames{}
	mi := &file_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceNames) ProtoMessage() {}

func (x *ResourceNames) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceNames.ProtoReflect.Descriptor instead.
func (*ResourceNames) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceNames) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type SearchTerm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTerm) Reset() {
	*x = SearchTerm{}
	mi := &file_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTerm) ProtoMessage() {}

func (x *SearchTerm) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTerm.ProtoReflect.Descriptor instead.
func (*SearchTerm) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *SearchTerm) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SearchTerm) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Archetype struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Archetype     string                 `protobuf:"bytes,1,opt,name=archetype,proto3" json:"archetype,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Archetype) Reset() {
	*x = Archetype{}
	mi := &file_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Archetype) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Archetype) ProtoMessage() {}

func (x *Archetype) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Archetype.ProtoReflect.Descriptor instead.
func (*Archetype) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *Archetype) GetArchetype() string {
	if x != nil {
		return x.Archetype
	}
	return ""
}

type BlackListed struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BlackListedRefs []string               `protobuf:"bytes,1,rep,name=black_listed_refs,json=blackListedRefs,proto3" json:"black_listed_refs,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BlackListed) Reset() {
	*x = BlackListed{}
	mi := &file_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlackListed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackListed) ProtoMessage() {}

func (x *BlackListed) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackListed.ProtoReflect.Descriptor instead.
func (*BlackListed) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *BlackListed) GetBlackListedRefs() []string {
	if x != nil {
		return x.BlackListedRefs
	}
	return nil
}

type Dates struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dates         []string               `protobuf:"bytes,1,rep,name=dates,proto3" json:"dates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dates) Reset() {
	*x = Dates{}
	mi := &file_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dates) ProtoMessage() {}

func (x *Dates) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dates.ProtoReflect.Descriptor instead.
func (*Dates) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *Dates) GetDates() []string {
	if x != nil {
		return x.Dates
	}
	return nil
}

var File_common_proto protoreflect.FileDescriptor

const file_common_proto_rawDesc = "" +
	"\n" +
	"\fcommon.proto\x12\n" +
	"ygo.common\"\x1c\n" +
	"\n" +
	"ResourceID\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\"\x1f\n" +
	"\vResourceIDs\x12\x10\n" +
	"\x03IDs\x18\x01 \x03(\tR\x03IDs\"$\n" +
	"\fResourceName\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"%\n" +
	"\rResourceNames\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"0\n" +
	"\n" +
	"SearchTerm\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\")\n" +
	"\tArchetype\x12\x1c\n" +
	"\tarchetype\x18\x01 \x01(\tR\tarchetype\"9\n" +
	"\vBlackListed\x12*\n" +
	"\x11black_listed_refs\x18\x01 \x03(\tR\x0fblackListedRefs\"\x1d\n" +
	"\x05Dates\x12\x14\n" +
	"\x05dates\x18\x01 \x03(\tR\x05datesB\x06Z\x04/ygob\x06proto3"

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData []byte
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)))
	})
	return file_common_proto_rawDescData
}

var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_common_proto_goTypes = []any{
	(*ResourceID)(nil),    // 0: ygo.common.ResourceID
	(*ResourceIDs)(nil),   // 1: ygo.common.ResourceIDs
	(*ResourceName)(nil),  // 2: ygo.common.ResourceName
	(*ResourceNames)(nil), // 3: ygo.common.ResourceNames
	(*SearchTerm)(nil),    // 4: ygo.common.SearchTerm
	(*Archetype)(nil),     // 5: ygo.common.Archetype
	(*BlackListed)(nil),   // 6: ygo.common.BlackListed
	(*Dates)(nil),         // 7: ygo.common.Dates
}
var file_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
